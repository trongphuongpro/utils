#! /usr/bin/python3

import os
import os.path
import sys


templatesPath = os.getenv("TEMPLATES_PATH")
cmakeTemplatesDir = '/CMake_templates/'
doxygenTemplatesDir = '/Doxygen_templates/'


def deleteDir(dirPath):
	opt = input("Directory \'{}\' already exists, overwrite it? [Y/N]".format(dirPath))

	if opt == 'Y' or opt == 'y':

		for (dir, subdirs, files) in os.walk(dirPath, topdown=False):
			for f in files:
				filePath = os.path.join(dir, f)
				os.remove(filePath)

				if DEBUG:
					print("Removed file {}".format(p))

			os.rmdir(dir)

			if DEBUG:
				print("Removed dir {}".format(dir))
		
	else:
		print("Process cancelled.")
		sys.exit(0)


def createEntries(dirPath, category):
	
	os.mkdir(dirPath)
	os.chdir(dirPath)


	# create project structure
	os.mkdir('bin')
	os.mkdir('build')
	os.mkdir('docs')
	os.mkdir('include')
	os.mkdir('src')
	os.mkdir('lib')
	os.makedirs('test/bin')
	os.makedirs('test/build')
	

	# create README.md
	file = open('README.md', 'w')
	file.close()


	# initialize git repository for this project
	os.system("git init")


	# create .gitignore for git repository
	file = open('.gitignore', 'w')
	file.write("build/\n"
				"bin/\n"
				"*sublime*\n"
				"sftp-config.json\n")
	file.close()


	# copy CMakeList.txt template to project
	templateFile = templatesPath + cmakeTemplatesDir + category + "-CMakeLists.txt"
	os.system("cp {} {}".format(templateFile, 'CMakeLists.txt'))
	os.system("cp {} {}".format(templateFile, 'test/CMakeLists.txt'))


	# copy Doxygen configuration file to project with default name "Doxyfile"
	templateFile = templatesPath + doxygenTemplatesDir + "Doxyfile"
	os.system("cp {} {}".format(templateFile, "docs"))

	print("Process finished successfully.")


DEBUG = False
	
if __name__ == "__main__":
	if len(sys.argv) == 1:
		dirPath = input("[Directory] ")
	else:
		dirPath = sys.argv[1]

	if templatesPath is None:
		print("Path to templates is not available.\n"
			">> Please add environment variable TEMPLATES_PATH='path/to/your/templates'")
		sys.exit(0)

	categories = [f.split('-')[0] for f in os.listdir(templatesPath + cmakeTemplatesDir)]

	text = "[Category]"
	for cat in categories:
		text += " " + cat

	category = input(text + ": ")
	if category not in categories:
		print("Category [{}] is not available".format(category))
		sys.exit(0)

	if os.path.exists(dirPath):
		deleteDir(dirPath)

	createEntries(dirPath, category)